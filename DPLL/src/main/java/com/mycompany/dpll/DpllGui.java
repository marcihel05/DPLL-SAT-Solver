/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.dpll;

import java.awt.Component;
import java.io.File;
import static java.lang.Math.abs;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author helena
 */
public class DpllGui extends javax.swing.JFrame {
    
    Formula formula;
    String fileName ="";
    private JFileChooser jChooser1 = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");

    /**
     * Creates new form DpllGui
     */
    public DpllGui() {
        initComponents();
        jChooser1.setFileFilter(filter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        formulaTextArea = new javax.swing.JTextArea();
        checkButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        formulaTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pigeonButton = new javax.swing.JButton();
        triangleButton = new javax.swing.JButton();
        queensButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        formulaTextArea.setEditable(false);
        formulaTextArea.setColumns(20);
        formulaTextArea.setFont(new java.awt.Font("Liberation Sans", 0, 20)); // NOI18N
        formulaTextArea.setRows(5);
        formulaTextArea.setName("formulaTextArea"); // NOI18N
        jScrollPane1.setViewportView(formulaTextArea);

        checkButton.setText("Check SAT");
        checkButton.setEnabled(false);
        checkButton.setName("chackButton"); // NOI18N
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });

        loadButton.setText("Load from file");
        loadButton.setName("loadButton"); // NOI18N
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        formulaTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formulaTextFieldKeyReleased(evt);
            }
        });

        jLabel1.setText("Input formula in CNF");

        jLabel2.setText("or");

        pigeonButton.setText("Pigeons");

        triangleButton.setText("Triangle coloring");

        queensButton.setText("4 queens");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pigeonButton)
                        .addGap(62, 62, 62)
                        .addComponent(triangleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(queensButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(formulaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(loadButton)))
                .addGap(18, 18, 18)
                .addComponent(checkButton)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(formulaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadButton)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(checkButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pigeonButton)
                        .addComponent(triangleButton)
                        .addComponent(queensButton)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        // TODO add your handling code here:
        int retVal = jChooser1.showOpenDialog((Component)evt.getSource());
        if( retVal == JFileChooser.APPROVE_OPTION){
            File file = jChooser1.getSelectedFile();
            try{
                fileName = file.toString();
            }
            
            catch(Exception e){}
            File formulaFile = new File(fileName);
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        if(formulaTextField.getText() != ""){
            //parse formula
        }
        //Pair check = dpllAlgorithm(formula);
        ArrayList<ArrayList<Integer>> f ;//= test();
        //f = test1();
        f = test();
        ArrayList<Integer> prop = new ArrayList<Integer>(){{add(1);add(2);add(3);add(4);add(5);add(6);}};
        //prop = Arrays.asList(1,2,3);
        Formula form = new Formula(f, prop);
        formulaTextArea.setText(form.toString());
        Pair rez = dpllAlgorithm(form);
        System.out.println(rez.getDecision());
    }//GEN-LAST:event_checkButtonActionPerformed

    private void formulaTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formulaTextFieldKeyReleased
        System.out.println(formulaTextField.getText());
        if(!"".equals(formulaTextField.getText())) checkButton.setEnabled(true);
        else checkButton.setEnabled(false);
    }//GEN-LAST:event_formulaTextFieldKeyReleased

    private Pair dpllAlgorithm(Formula form){
        System.out.println("pocetak");
        //formulaTextArea.setEnabled(true);
        //formulaTextArea.setText(form.toString());
        //formulaTextArea.setEnabled(false);
        satPosibilities r = form.unitPropagate();
        if( r == satPosibilities.unsat) return new Pair(false, form.getInterpretation());
        form.pureLiteral();
        System.out.println("broj disj je " + form.size());
        if(form.isEmpty()) return new Pair(true, form.getInterpretation());
        if(form.checkIfSat()) return new Pair(true, form.getInterpretation());
        if(form.doesEmptyClauseExists()) return new Pair(false, form.getInterpretation());
        int l = form.chooseLiteral();
        System.out.println("Odabrani literal je " + l);
        Formula f1 = form.copy();
        Formula f2 = form.copy();
        
        f1.assignLiteral(l, false);
        f2.assignLiteral(l, true);
        System.out.println("velicina f2 je " + f2.size());
        Pair p1 = dpllAlgorithm(f1);
        System.out.println("velicina f2 nakon dpll s f1 je " + f2.size());
        if(p1.getDecision()) return p1;
        else {System.out.println("probam s true za " + l); return dpllAlgorithm(f2);}
    }
    
    private ArrayList<ArrayList<Integer>> test(){
       ArrayList<ArrayList<Integer>> l = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> d = new ArrayList<Integer>(){{
            add(-1);add(3);add(4);
        }};
        l.add(d);
        d = new ArrayList<Integer>(){{
            add(-2);add(6);add(4);
        }};
         l.add(d);
        d = new ArrayList<Integer>(){{
            add(-2);add(-6);add(-3);
        }};
        l.add(d);
        d = new ArrayList<Integer>(){{
            add(-4);add(-2);
        }};
        l.add(d);
        d = new ArrayList<Integer>(){{
            add(2); add(-3); add(-1);
        }};
        l.add(d);
        d = new ArrayList<Integer>(){{
            add(2);add(6);add(3);
        }};
        l.add(d);
        d = new ArrayList<Integer>(){{
            add(2);add(-6);add(-4);
        }};
        l.add(d);
        d = new ArrayList<Integer>(){{
            add(1);add(5);
        }};
        l.add(d);
        d = new ArrayList<Integer>(){{
            add(1);add(6);
        }};
        l.add(d);
        d = new ArrayList<Integer>(){{
            add(-6);add(3);add(-5);
        }};
        l.add(d);
        d = new ArrayList<Integer>(){{
            add(1);add(-3);add(-5);
        }};
        l.add(d);
       return l;
    }
    
   /*  private List<List<Integer>> test1(){
        List<List<Integer>> ret = new ArrayList<>();
        List<Integer> c = Arrays.asList(1,2,3);
        ret.add(c);
        c = Arrays.asList(1,2,-3);
        ret.add(c);
        c = Arrays.asList(1,-2,3);
        ret.add(c);
        c = Arrays.asList(-1,2,-3);
        return ret;
    }*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DpllGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DpllGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DpllGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DpllGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DpllGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkButton;
    private javax.swing.JTextArea formulaTextArea;
    private javax.swing.JTextField formulaTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton pigeonButton;
    private javax.swing.JButton queensButton;
    private javax.swing.JButton triangleButton;
    // End of variables declaration//GEN-END:variables
}
